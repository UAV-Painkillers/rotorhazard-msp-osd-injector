name: Release
on:
  push:
    # Sequence of patterns matched against refs/tags
    tags:
    - 'v*' # Push events to matching v*, i.e. v1.0, v20.15.10
jobs:
    build:
        runs-on: ubuntu-latest
        steps:
    
        - name: Inject slug/short variables
          uses: rlespinasse/github-slug-action@v4
    
        - name: Checkout
          uses: actions/checkout@v3
    
        - name: Set up Python
          uses: actions/setup-python@v4
          with:
            python-version: '3.10'
    
        - name: Cache pip
          uses: actions/cache@v3
          with:
            path: ~/.cache/pip
            key: ${{ runner.os }}-pip
    
        - name: Install PlatformIO
          run: |
            python -m pip install --upgrade pip
            pip install platformio
            pip install wheel
    
        - name: Cache PlatformIO
          uses: actions/cache@v3
          with:
            path: ~/.platformio
            key: ${{ runner.os }}-platformio

        - name: Install NodeJS
          uses: oven-sh/setup-bun@v1

        - name: Install WebUI dependencies
          run: |
            cd web-ui
            bun install

        - name: Build WebUI
          run: |
            cd web-ui
            bun run build
    
        - name: Run PlatformIO
          run: |
            mkdir -p ~/artifacts/firmware
            cd src
            platformio pkg install --platform native
            platformio pkg update
            pio run --environment betafpv-elrs-lite-24_uart
            pio run --target buildfs --environment betafpv-elrs-lite-24_uart
            OUTDIR=~/artifacts/firmware/LBT/betafpv-elrs-lite-24_uart
            mkdir -p $OUTDIR
            mv .pio/build/betafpv-elrs-lite-24_uart/firmware.bin $OUTDIR/firmware.bin >& /dev/null || :
            mv .pio/build/betafpv-elrs-lite-24_uart/littlefs.bin $OUTDIR/filesystem.bin >& /dev/null || :
    
        - name: Bundle / Zip Artifacts directory
          run: |
            cd ~/artifacts
            zip -r artifacts.zip .

        - name: Create Release
          id: create_release
          uses: actions/create-release@v1
          env:
            GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          with:
            tag_name: ${{ github.ref }}
            release_name: Release ${{ github.ref }}
            draft: false
            prerelease: false

        - name: Upload Release Asset
          id: upload-release-asset 
          uses: actions/upload-release-asset@v1
          env:
            GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          with:
            upload_url: ${{ steps.create_release.outputs.upload_url }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps 
            asset_path: ~/artifacts.zip
            asset_name: rh-osd-injector-${{ github.ref }}.zip
            asset_content_type: application/zip
    
      